.auction-item {
  .card {
    --bs-card-border-width: 0;
    --bs-card-cap-bg: white;
    --bs-card-spacer-x: 1.5rem;

    .card-header {
      padding: 2rem var(--bs-card-spacer-x) 1rem var(--bs-card-spacer-x);
    }

    .card-img {
      padding-inline: var(--bs-card-spacer-x);

      .card-img-top {
        position: relative;
      }

      .countdown-badge {
        position: absolute;
        top: 0;
        left: 0;
        padding: .35rem .5rem;
      }

      .preview-btn {
        position: absolute;
        bottom: 0;
        right: 0;
      }
    }

    .card-body {
      padding: 1rem var(--bs-card-spacer-x) 2rem var(--bs-card-spacer-x);
    }

    .card-footer {
      padding: 1rem var(--bs-card-spacer-x) 1rem var(--bs-card-spacer-x);
    }
  }
}

/* Relative Position für das Overlay */
.auction-listing {
  position: relative;
  min-height: 200px;
}


.auction-details-section {
  display: grid;
  grid-template-columns: auto 1fr; /* Erste Spalte passt sich dem Inhalt an, zweite nimmt Restplatz */
  gap: 0.5rem 1rem; /* Abstand: Zeilen Spalten */
  align-items: baseline;
}

.filter-loading-overlay {
  position: fixed;
  top: 0;
  left: 0; 
  width: 100vw;
  height: 100dvh; /* Dynamische Viewport-Höhe ist oft besser */
  background-color: rgba(0, 0, 0, 0.35); /* Etwas dezenter vielleicht */
  display: none; /* Standardmäßig ausgeblendet */
  justify-content: center;
  align-items: center;
  z-index: 1050; /* Über den meisten anderen Elementen, aber unter Modals, falls nötig */
}

/* Der .filter-spinner (SVG) wird innerhalb des Overlays zentriert.
   Die Animation dafür sollte bereits existieren oder hier definiert werden, falls nicht. 
   Die Größe des Spinners wird im SVG selbst oder über CSS für .filter-spinner definiert */

.filter-spinner {
  /* Ggf. vorhandene Styles für Größe (width, height) hier belassen oder anpassen */
  /* style="width: 50px; height: 50px;" ist aktuell inline im SVG-Tag */
  animation: caeliAuctionSpin 1.8s cubic-bezier(0.25, 0.1, 0.25, 1) infinite;
}

@keyframes caeliAuctionSpin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.filter-spinner path {
  fill: #fff;
}
