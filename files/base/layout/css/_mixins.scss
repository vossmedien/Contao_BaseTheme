@import "../_vendor/node_modules/bootstrap/scss/functions";
@import "../_vendor/node_modules/bootstrap/scss/variables";
@import "../_vendor/node_modules/bootstrap/scss/mixins";

@mixin fa-icon {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
}

%fa-icon {
  @include fa-icon;
}



@mixin content-box($override-padding: "") {
  border-radius: $border-radius;
  box-shadow: $box-shadow;
  position: relative;
  z-index: 5;
  background-color: $body-bg;

  &:not([class*="p-"]):not([class*="px-"]):not([class*="py-"]) {
    @if $override-padding == "" {
      padding: calc(var(--content-box--padding));
    } @else {
      padding: $override-padding !important;
    }
  }
}

/*

 */
@mixin offset-styles($size, $value) {
  $directions: (
          x: (left, right),
          y: (top, bottom),
          top: (top),
          bottom: (bottom),
          left: (left),
          right: (right),
          all: (top, bottom, left, right)
  );

  @each $key, $dirs in $directions {
    &-#{$key} {
      @each $dir in $dirs {
        @if $dir == top {
          position: relative;
          top: -$value;
          //margin-top: $value*3;
          margin-bottom: -$value;
        } @else if $dir == bottom {
          margin-bottom: -$value;
          //margin-bottom: calc(-1*(var(--main-gap) + 60px));
        } @else if $dir == left {
          margin-left: -$value;
        } @else if $dir == right {
          margin-right: -$value;
        }
      }
    }
  }
}

@mixin padding-styles($size, $value) {
  $directions: (x: (left, right), y: (top, bottom), top: (top), bottom: (bottom), left: (left), right: (right), all: (all));

  @each $key, $dirs in $directions {
    &-#{$key} {
      @if $key == 'all' {
        padding: $value;
      } @else {
        @each $dir in $dirs {
          padding-#{$dir}: $value;
        }
      }
    }
  }
}

%make-fullwidth {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

%half-container {
  max-width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;

  @each $breakpoint, $container-max-width in $container-max-widths {
    @include media-breakpoint-up($breakpoint) {
      @if $container-max-width != 100% {
        max-width: $container-max-width / 2;
        padding-left: 0;
        padding-right: 0;
      } @else if $breakpoint == sm {
        max-width: 540px;
        padding-left: 0;
        padding-right: 0;
      }
    }
  }
}

%remove-headline-padding {
  .ce--headline > * {
    padding-left: 0px;
    padding-right: 0px;
  }
}

