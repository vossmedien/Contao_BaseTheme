@mixin responsive-font-size($heading) {
  $desktop-size: map-get(map-get($headings-font-sizes, $heading), 'desktop');
  $mobile-size: map-get(map-get($headings-font-sizes, $heading), 'mobile');

  // Berechne einen bevorzugten Wert, der skaliert, z.B. mobile Größe + viewport-Anteil
  // Die '1.5vw' kann angepasst werden, um die Skalierungsgeschwindigkeit zu steuern.
  $preferred-value: calc(#{$mobile-size} + 1.5vw);

  // Verwende clamp(MIN, PREFERRED, MAX)
  font-size: clamp(#{$mobile-size}, #{$preferred-value}, #{$desktop-size});

  // Entferne den alten @include media-breakpoint-up Block
  // @include media-breakpoint-up(md) {
  //   font-size: $desktop-size;
  // }
}

// Globale Überschriften-Stile
@each $heading, $sizes in $headings-font-sizes {
  #{$heading}, .#{$heading} {
    &:not(:has([class*="h"])) {
      @include responsive-font-size($heading);
      line-height: $headings-line-height;
      font-weight: var(--bs-#{$heading}-font-weight, $headings-font-weight);

      &:not(.ce--headline *) {
        // Verwende jetzt die margin-Map statt der Berechnung
        margin-bottom: map-get($headline-margins, $heading);

        @include media-breakpoint-down(md) {
          margin-bottom: map-get($mobile-headline-margins, $heading);
        }

        display: block;
      }
    }
  }
}

// Angepasste Headline-Klassen
.ce--headline {
  display: flex;
  flex-flow: column nowrap;

  * {
    margin: 0;
    max-width: 100%;
  }

  @each $heading in map-keys($headings-font-sizes) {
    &.hl-#{$heading} {
      margin-bottom: map-get($headline-margins, $heading);

      @include media-breakpoint-down(md) {
        margin-bottom: map-get($mobile-headline-margins, $heading);
      }

      @if $heading != 'h6' {
        $next-heading: nth(map-keys($headings-font-sizes), index(map-keys($headings-font-sizes), $heading) + 1);
        .ce--topline,
        .ce--subline {
          @include responsive-font-size($next-heading);
        }
      } @else {
        .ce--topline,
        .ce--subline {
          font-size: $font-size-base;
        }
      }

      // Neue Styles für Topline und Subline basierend auf Maps
      .ce--topline {
        color: var(--bs-primary); // Farbe hier direkt setzen
        font-weight: $font-weight-bold; // Gewicht hier direkt setzen
        margin: map-get($topline-margins, $heading); // Margin aus Map
      }

      .ce--subline {
        color: currentColor; // Farbe hier direkt setzen
        font-weight: $font-weight-light; // Gewicht hier direkt setzen
        margin: map-get($subline-margins, $heading); // Margin aus Map
      }
    }
  }
}

// Zusätzliche Stile
.container .ce--headline > .container {
  margin: 0;
}

[class*="text-white"] .ce--headline {
  --#{$prefix}headline-color: var(--#{$prefix}white);
}

// Mixin für Headline-Gewichte
@mixin headline-weights {
  @for $i from 1 through 6 {
    h#{$i}, .h#{$i} {
        font-weight: var(--bs-h#{$i}-font-weight, $headings-font-weight);
    }
  }
}

// Anwendung des Mixins
@include headline-weights;

// Entferne den redundanten media-query-Block, da wir die responsiven
// Anpassungen jetzt direkt in die anderen Blöcke integriert haben