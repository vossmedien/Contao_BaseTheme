@import "../../../_vendor/node_modules/bootstrap/scss/functions";
@import "../../../_vendor/node_modules/bootstrap/scss/variables";
@import "../../../_vendor/node_modules/bootstrap/scss/mixins";

.content--element.ce_rsce_stoerer {
  --stoerer-padding: .75rem;
  --stoerer-padding-inner: 1.25rem;
  --stoerer-footer-margin: .5rem;
  --transition-duration: 0.6s;
  --transition-color-duration: 0.15s;

  display: flex;
  flex-flow: column wrap;
  gap: .25rem;
  align-items: flex-start;
  --stoerer-vertical-gap: .5rem;
  position: relative;
  // Default fallbacks if JS variables aren't set yet
  --trigger-width: 50px;
  --trigger-height: 50px;

  &.is-fixed {
    .ce--stoerer {
      position: fixed;
    }
  }


  svg, svg path {
    transition: fill var(--transition-color-duration) ease-in-out, transform var(--transition-duration) ease-in-out;
  }

  .ce--stoerer {
    display: flex; // Trigger und Content nebeneinander
    align-items: flex-start; // Oben ausrichten
    padding: 0;
    background-color: transparent;
    //box-shadow: none;
    gap: 0;
    position: absolute;
    transition: transform var(--transition-duration) ease-in-out;
    z-index: 1000;
    height: var(--trigger-height); // Use trigger height for min-height

    &[style*="right:"] {
      transform: translateX(calc(100% - var(--trigger-width)));

      &:hover, &:focus-within {
        transform: translateX(0);
      }
    }

    &[style*="left:"] {
      transform: translateX(calc(-100% + var(--trigger-width)));

      &:hover, &:focus-within {
        transform: translateX(0);
      }
    }

    &.is-expandable {
      .stoerer-trigger {
        flex-shrink: 0;
        padding: var(--stoerer-padding);
        background-color: var(--bs-body-bg); // Fallback, wird überschrieben
        //box-shadow: $box-shadow;
        position: relative;
        //height: var(--trigger-height);
        //width: var(--trigger-width);
        // Transitions für Trigger
        transition: background-color var(--transition-color-duration) ease-in-out, color var(--transition-color-duration) ease-in-out;

        img, svg {
          display: block;
          max-width: 100%;
          height: auto; // Maintain aspect ratio
          max-height: 100%; // Prevent overflow if image is taller than trigger space allows
        }
      }

      .stoerer--content {
        flex-shrink: 0;
        background-color: var(--bs-body-bg); // Fallback, wird überschrieben
        //box-shadow: $box-shadow;
        overflow: hidden;
        white-space: nowrap;
        pointer-events: none;
        // Transitions für Inhaltsbereich (Farbe und Ausklappen)
        transition: background-color var(--transition-color-duration) ease-in-out, color var(--transition-color-duration) ease-in-out;

        // Hover-Effekte nur für den Content-Bereich selbst
        &:hover {
          // Beispiel: background-color: var(--content-bg-hover-color, inherit);
          // Beispiel: color: var(--content-text-hover-color, inherit);
        }
      }

      &:hover, &:focus-within {
        .stoerer--content {
          pointer-events: auto;
        }
      }
    }
  }

  .stoerer--content {
    position: relative;
    font-size: .75rem;

    @include media-breakpoint-up(md) {
      font-size: 1.25rem;
    }

    .stoerer-content--inner {
      padding: var(--stoerer-padding-inner);
      // Transition für Textfarbe im Inhalt
      transition: color var(--transition-color-duration) ease-in-out;

      p {
        margin-bottom: 0;
      }

      a:not(.btn) {
        position: relative;
        color: inherit;
        display: inline-block;
        border-bottom: 1px solid transparent;
        transition: all .3s ease-in-out;
        line-height: 1.1;

        &:hover {
          border-bottom: 1px solid currentColor;
        }
      }
    }
  }

  .stoerer-buttons--list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    //margin-top: .5rem; // Abstand zum Hauptbild

    .stoerer-button--item {
      display: flex;
      flex-direction: column;
      align-items: flex-start; // Label und Button linksbündig

      .button-label {
        font-size: 1.1rem; // Kleinere Schrift für das Label
        margin-bottom: .35rem;
        font-weight: bold;
      }
    }
  }

  .stoerer-footer--elements {
    display: flex;
    gap: .5rem;
    margin-top: var(--stoerer-footer-margin); // Abstand zu Content/Buttons
    //padding-top: .75rem; // Visuelle Trennung
    border-top: 3px solid var(--bs-body-color);
    padding: var(--stoerer-padding-inner);
    // Transition für Textfarbe in Footer-Links (falls Farbe gesetzt wird)
    transition: color var(--transition-color-duration) ease-in-out, background-color var(--transition-color-duration) ease-in-out;

    .footer-element--item {
      img, svg {
        display: block;
        max-width: 100%; // skaliert mit container
        height: auto;
      }

      a:not(.btn) {
        display: block;
        line-height: 0; // Verhindert extra Platz unter Bildern in Links
        // Füge Transition für color hinzu (mit kürzerer Dauer)
        transition: color 0.2s ease-in-out; // Kürzere Dauer nur für Farbwechsel

        &:after {
          display: none;
        }
      }
    }
  }
}


// Media Query für mobile Geräte
@media (max-width: 767px) {
  .content--element.ce_rsce_stoerer .ce--stoerer {
    &.is-expandable {
      transition: transform var(--transition-duration) ease-in-out, background-color var(--transition-duration) ease-in-out, color var(--transition-duration) ease-in-out; // Füge Farbtransition hinzu

      &:hover, &:focus-within {
        .stoerer--content {
          max-width: 80vw; // Limit content width on mobile
        }
      }
    }
  }
}
