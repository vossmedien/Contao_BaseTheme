# config/services.yaml
services:
    _defaults:
        autowire: true          # Automatically injects dependencies in your services.
        autoconfigure: true     # Automatically registers your services as commands, event subscribers, etc.
        public: false           # Allows optimizing the container by removing unused services; this also means
                                # fetching services directly from the container via $container->get() won't work.
                                # The best practice is to be explicit about your dependencies anyway.

    CaeliWind\ContaoCaeliContentCreator\:
        resource: ../src/
        exclude: ../src/{Entity,Migrations,Model,Resources}

    CaeliWind\ContaoCaeliContentCreator\Controller\:
        resource: ../src/Controller
        tags: ['controller.service_arguments']

    # Services registrieren - öffentlich für den Container-Zugriff
    CaeliWind\ContaoCaeliContentCreator\Service\GrokApiService:
        public: true
        arguments:
            # HttpClient wird autowired (?HttpClientInterface)
            # Logger wird autowired (LoggerInterface)
            $apiTimeout: '%caeli.content_creator.api_timeout%' # Inject timeout parameter
            $apiMaxTokens: '%caeli.content_creator.api_max_tokens%'

    CaeliWind\ContaoCaeliContentCreator\Service\NewsContentGenerator:
        public: true
        arguments:
            - '@contao.framework'          # ContaoFramework
            - '@database_connection'       # Connection
            - '@logger'                    # LoggerInterface (using common alias)
            - '%kernel.project_dir%'       # Project Directory Parameter

    CaeliWind\ContaoCaeliContentCreator\Service\DuplicateChecker:
        public: true

    CaeliWind\ContaoCaeliContentCreator\Service\PromptBuilder:
        public: true
        arguments:
            - '@twig'                              # Twig Environment
            - '@logger'                            # LoggerInterface (using common alias)
