<?php
// Helfer für die Headline generieren
// generateHeadlineHTML($topline, $headline, $subline, $headlineType, $animation = null, $headlineClass = null, $onlystyle = false, $additionalAttributes = null)

use Contao\StringUtil;

// Hinzufügen für binToUuid
use Vsm\VsmHelperTools\Helper\EnvHelper;

// Hinzufügen für Frontend-Check
use Vsm\VsmHelperTools\Helper\ImageHelper;

// Hinzufügen für Bildgenerierung
use Vsm\VsmHelperTools\Helper\HeadlineHelper;
use Vsm\VsmHelperTools\Helper\ButtonHelper;

// Social Media Meta-Tags Helper hinzufügen
use Vsm\VsmHelperTools\Helper\SocialMetaHelper;

// Animation für Headline-Element nur setzen, wenn 1-spaltig oder wenn 2-spaltig & Headline oben
$headlineElementAnimation = null;
if (!$this->two_columns || $this->headline_above_columns) {
    $headlineElementAnimation = $this->animation_type_headline;
}


// Standardwerte und Berechnungen für zweispaltiges Layout
$colWidthContent = '50';
$bsColContent = 6;
$bsColHeadline = 6;
$orderContentClass = 'order-1';
$orderHeadlineClass = 'order-2';

// Bilddaten vorbereiten
$imagesData = [];
$imageUuids = [];
if ($this->add_images && !empty($this->multiSRC)) {
    $unserialized = StringUtil::deserialize($this->multiSRC);
    if (is_array($unserialized)) {
        $imageUuids = $unserialized;

        // Filterung bleibt wichtig, falls ungültige Einträge oder Verzeichnisse dabei sind
        $imageUuids = array_filter($imageUuids, function ($uuid) {
            if (!is_string($uuid) || strlen($uuid) !== 36) { // Grundlegende UUID-String-Prüfung
                return false;
            }
            $file = \Contao\FilesModel::findByUuid($uuid);
            return $file !== null && $file->type === 'file';
        });
    }
}

$hasImages = !empty($imageUuids);
$rand = rand(1, 1000); // Zufällige ID für Lightbox/Slider
$spacingClass = $this->image_spacing_class ?: 'mb-1'; // Abstandsklasse holen oder Fallback
$totalImages = count($imageUuids);

if ($this->two_columns) {
    $colWidthContent = $this->column_width_content ?? '50'; // Standard 50%
    $colWidthContentInt = (int)$colWidthContent;
    $colWidthHeadlineInt = 100 - $colWidthContentInt;

    // Bootstrap Spaltenklassen berechnen (Basis ist 12)
    $bsColContent = round(12 * ($colWidthContentInt / 100));
    // Sicherstellen, dass die Summe 12 ergibt und keine Spalte 0 ist
    $bsColContent = max(1, min(11, $bsColContent));
    $bsColHeadline = 12 - $bsColContent;

    // Klassen für Spaltenreihenfolge basierend auf der Auswahl 'column_order'
    $orderHeadlineClass = 'order-lg-1 order-1'; // Standard: HL Mobil, HL Desktop
    $orderContentClass = 'order-lg-2 order-2'; // Standard: CO Mobil, CO Desktop

    switch ($this->column_order) {
        case 'hl_co': // Mobil: HL, Desktop: CO
            $orderHeadlineClass = 'order-lg-2 order-1';
            $orderContentClass = 'order-lg-1 order-2';
            break;
        case 'co_hl': // Mobil: CO, Desktop: HL
            $orderHeadlineClass = 'order-lg-1 order-2';
            $orderContentClass = 'order-lg-2 order-1';
            break;
        case 'co_co': // Mobil: CO, Desktop: CO
            $orderHeadlineClass = 'order-lg-2 order-2';
            $orderContentClass = 'order-lg-1 order-1';
            break;
        // Fall 'hl_hl' ist der Standard und bereits gesetzt
    }

    // Wenn Headline oben, bekommt sie dort die Animation
    if ($this->headline_above_columns) {
        $headlineHTML = Vsm\VsmHelperTools\Helper\HeadlineHelper::generateHeadlineHTML(
            $this->topline,
            $this->headline,
            $this->subline,
            $this->headline_type,
            $this->animation_type_headline, // Animation hier, wenn Headline oben
            null,
            (bool)$this->onlystyle,
            null
        );
    }

}


// Kopfbild vorbereiten
$headerImageHTML = '';
if ($this->add_header_image && $this->header_image) {
    // fileTree mit fieldType=radio speichert UUID direkt (nicht serialisiert)


    $headerImageHTML = Vsm\VsmHelperTools\Helper\ImageHelper::generateImageHTML(
        $this->header_image,
        null, // Kein Alt-Text aus Headline
        null, // Keine Beschreibung
        $this->header_image_size, // Gewählte Bildgröße
        null, // Keine CSS-Klasse extra
        false, // Korrektur: Auf true geändert, um Figure/Picture zu erzwingen
        false // Keine Lightbox per Default (kann man anpassen)
    );

}

// Bild generieren
$imageHTML = '';
if ($this->image_src) {
    $imageHTML = ImageHelper::generateImageHTML(
        $this->image_src,
        $this->headline, // Headline als Alt-Text
        $this->headline, // Headline als Titel (headline-Parameter)
        $this->image_size // Gewählte Bildgröße
    // Standardwerte für class, inSlider, colorBox, lazy, caption, imageUrl werden vom Helper gesetzt
    );
}

// Aufzählungspunkte vorbereiten
$listItems = StringUtil::deserialize($this->list_items, true);

// Social Media Meta-Tags generieren (nur einmal pro Seite)
if (EnvHelper::isFrontend() && !SocialMetaHelper::hasGeneratedMetaTags()) {
    $socialMetaData = [
        'title' => $this->headline,
        'description' => $this->text,
        'image' => $this->image_src,
        'type' => 'website'
    ];
    
    $GLOBALS['TL_HEAD'][] = SocialMetaHelper::generateSocialMetaTags($socialMetaData);
}

?>

<div <?php echo $this->cssID; ?> class="content--element head-hero  <?php echo $this->class; ?>">
    <div class="ce--inner <?php if (!empty($this->container_css_class)): ?><?= $this->container_css_class ?><?php endif; ?>">

        <div class="">
            <?php // --- Breadcrumb --- ?>
            <?php if ($this->add_breadcrumb && $this->breadcrumb_module && EnvHelper::isFrontend()): ?>
                <div class="breadcrumb-wrapper mb-4 mb-md-3" data-animation="animate__fadeIn">
                    {{insert_module::<?= $this->breadcrumb_module ?>}}
                </div>
            <?php endif; ?>

            <?php // --- Headline & Text (zentriert mit max. Breite) --- ?>
            <div class="row">
                <div class="col-12 col-xl-10">

                    <div class="headline-section" <?php if ($this->animation_headline): ?>data-animation="<?= $this->animation_headline ?>"<?php endif; ?>>
                        <?= Vsm\VsmHelperTools\Helper\HeadlineHelper::generateHeadlineHTML(
                            $this->topline,
                            $this->headline,
                            $this->subline,
                            $this->headline_type,
                            null,
                            null,
                            false,
                            (empty($this->text) && !$this->add_list_items && !$this->buttons ? "mb-0" : "")
                        ); ?>
                    </div>
                    <?php if ($this->text): ?>
                        <div class="text-section fw-semibold<?php if ($this->add_list_items): ?> mb-4<?php endif; ?>" <?php if ($this->animation_headline): ?>data-animation="<?= $this->animation_headline ?>"<?php endif; ?>>
                            <?= $this->text; ?>
                        </div>
                    <?php endif; ?>
                </div>
            </div>
        </div>
        <?php // --- Aufzählung & Buttons (zweispaltig) --- ?>
        <?php if ($this->add_list_items && !empty($listItems) || $this->buttons): // Nur Row ausgeben, wenn Inhalt vorhanden ?>
            <div class="">
                <?php // Spalte für Aufzählung ?>
                <?php if ($this->add_list_items && !empty($listItems)):
                    if ($this->list_full_width) {
                        // Alte Variante: Row mit col-md-6
                        $listColClass = 'col-12';
                        $listGridClass = 'row gx-5 gy-1 gy-lg-2';
                        $listItemClass = 'd-flex col-md-6';
                    } else {
                        // Neue Variante: CSS Grid mit 2 Spalten, content-based width
                        $listColClass = 'col-12 ';
                        $listGridClass = 'd-lg-grid gap-3 d-flex flex-column';
                        $listItemClass = 'd-flex pe-lg-gap';
                    }
                    ?>  <ul class="list-unstyled list-with-icons <?= $listGridClass ?>" <?php if (!$this->list_full_width): ?>style="grid-template-columns: repeat(2, max-content);"<?php endif; ?>>
                    <div class="<?= $listColClass ?>">
                        <ul class="list-unstyled list-with-icons <?= $listGridClass ?>" <?php if (!$this->list_full_width): ?>style="grid-template-columns: repeat(2, max-content);"<?php endif; ?>>
                            <?php foreach ($listItems as $index => $item):
                                $isLastInGridColumn = ($index == count($listItems) - 1) || ($index % 2 == 0 && $index == count($listItems) - 2);
                                ?>
                                <li class="<?= $listItemClass ?>" <?php if ($this->animation_list): ?>data-animation="<?= $this->animation_list ?>"<?php endif; ?>>
                                    <?php
                                    $itemText = '';
                                    $defaultIcon = '<i style="font-size: 36px; position: relative; top: -5px;" class="fa-kit fa-circle-check text-tertiary me-2  flex-shrink-0"></i>'; // Default Font Awesome Icon

                                    if (is_array($item)) {
                                        $itemText = StringUtil::decodeEntities($item['item_text'] ?? '');
                                    } elseif (is_string($item)) {
                                        $itemText = StringUtil::decodeEntities($item);
                                    }
                                    ?>
                                    <?= $defaultIcon ?>
                                    <span class="text"><?= $itemText; ?></span>
                                </li>
                            <?php endforeach; ?>
                        </ul>
                    </div>
                <?php endif; ?>

                <?php // Spalte für Buttons ?>
                <?php if ($this->buttons): ?>
                    <div class="col-12 col-lg-auto ">
                        <?= Vsm\VsmHelperTools\Helper\ButtonHelper::generateButtonHTML($this->buttons, "mt-4"); ?>
                    </div>
                <?php endif; ?>
            </div>
        <?php endif; ?>

        <?php // --- Bild (Unterhalb) --- ?>
        <?php if ($imageHTML): ?>
            <div class="image-section mt-gap" <?php if ($this->animation_image): ?>data-animation="<?= $this->animation_image ?>"<?php endif; ?>>
                <?= $imageHTML; ?>
            </div>
        <?php endif; ?>

    </div>
</div>