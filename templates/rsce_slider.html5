<?php
if (!isset($this->size)) {
    $this->{"size"} = "";
}
?>

    <div <?php echo $this->cssID; ?> class="content--element">
        <div class="ce--inner  <?php echo $this->class; ?>">

            <?= VSM_HelperFunctions\HeadlineHelper::generateHeadlineHTML(
                $this->topline,
                $this->headline,
                $this->subline,
                $this->hl,
                $this->animation_type,
                null,
                false,
                null
            ); ?>

            <?php

            use Contao\StringUtil;

            if ($this->selecttype == "multiple") {
                $unserializedData = unserialize($this->multiSRC);
                if (is_array($unserializedData)) {
                    $dataSorted = array_map([StringUtil::class, 'binToUuid'], $unserializedData);
                } else {
                    $dataSorted = [];
                }
            } else {
                $dataSorted = [];
            }

            // Berechnen der sichtbaren Elemente fÃ¼r Masonry
            $totalItems = count($dataSorted);
            $desktopColumns = $this->masonry_spalten ?: 3;
            $mobileColumns = $this->masonry_spalten_mobile ?: 2;
            $visibleRows = $this->visible_rows ?: 2;

            $desktopVisibleItems = $desktopColumns * $visibleRows;
            $mobileVisibleItems = $mobileColumns * $visibleRows;

            $showMoreButton = $this->limit_display && $totalItems > $desktopVisibleItems;
            ?>

            <div class="ce--content-slider <?php if ($this->show_pagination): ?>with-pagination<?php endif; ?> <?php if (count($this->galery) > $this->slides_per_view || count($dataSorted) > $this->slides_per_view) : ?>is-slider<?php endif; ?>">
                <?php $rand = rand(1, 100); ?>

                <?php if ($this->open_lightbox): ?>
                    <script type="text/javascript" defer>
                        document.addEventListener('DOMContentLoaded', function () {
                            new VenoBox({
                                selector: ".lightbox_<?= $rand;?>",
                                infinigall: true,
                                maxWidth: '95%',
                                numeration: true,
                                spinner: 'flow',
                                initialScale: 0.9,
                                transitionSpeed: 200,
                                fitView: true,
                            });
                        });
                    </script>
                <?php endif; ?>

                <?php if ($this->text_on_slider): ?>
                    <div class="slider-caption"
                         style="<?php if ($this->alternate_background_color): ?>background-color: <?= $this->alternate_background_color; ?>;<?php endif; ?> <?php if ($this->alternate_text_color): ?>color: <?= $this->alternate_text_color; ?>;<?php endif; ?>">
                        <?= $this->text_on_slider; ?>
                    </div>
                <?php endif; ?>

                <div class="swiper <?php if ($this->show_pagination): ?>with-pagination<?php endif; ?> content-slider_<?= $this->id; ?>">
                    <div class="swiper-wrapper align-items-center">
                        <?php $itemCount = 0; ?>
                        <?php if ($dataSorted) : ?>
                            <?php
                            $dataSorted = array_filter($dataSorted, function ($uuid) {
                                $file = \Contao\FilesModel::findByUuid($uuid);
                                return $file !== null && !$file->isDir;
                            });

                            foreach ($dataSorted as $uuid) : ?>
                                <?php $file = \Contao\FilesModel::findByUuid($uuid); ?>
                                <?php if ($file !== null && $file->type === 'file') : ?>
                                    <div class="swiper-slide text-center" data-aos="<?php if ($this->slide_animation_type) : ?><?php echo $this->slide_animation_type; ?><?php endif; ?>">
                                        <?= VSM_HelperFunctions\ImageHelper::generateImageHTML($uuid, null, $this->headline, $this->size, null, false, $this->open_lightbox ? $rand : ""); ?>
                                    </div>
                                    <?php $itemCount++; ?>
                                <?php endif; ?>
                            <?php endforeach ?>
                        <?php else : ?>
                            <?php foreach ($this->galery as $slide) : ?>
                                <div class="swiper-slide text-center" data-aos="<?php if ($this->slide_animation_type) : ?><?php echo $this->slide_animation_type; ?><?php endif; ?>">
                                    <?= VSM_HelperFunctions\ImageHelper::generateImageHTML($slide->slide, $this->headline, $slide->slide_text, $slide->size, null, false, $this->open_lightbox ? $rand : ""); ?>
                                </div>
                                <?php $itemCount++; ?>
                            <?php endforeach ?>
                        <?php endif; ?>
                    </div>
                </div>

                <?php if (count($this->galery) > 1 || count($dataSorted) > 1) : ?>
                    <?php if ($this->show_pagination): ?>
                        <div class="content-slider_<?= $this->id; ?> swiper-pagination"></div>
                    <?php endif; ?>
                    <?php if ($this->show_arrows): ?>
                        <div class="content-slider_<?= $this->id; ?> swiper-button-prev"></div>
                        <div class="content-slider_<?= $this->id; ?> swiper-button-next"></div>
                    <?php endif; ?>
                <?php endif; ?>
            </div>

            <?php if ($showMoreButton): ?>
                <div class="show-more-container text-center mt-3" style="display: none;">
                    <button class="btn btn-primary show-more-button">Mehr anzeigen</button>
                </div>
            <?php endif; ?>
        </div>
    </div>

<?php if (VSM_HelperFunctions\EnvHelper::isFrontend()): ?>
    <script type="text/javascript">
        window.addEventListener('DOMContentLoaded', function () {
            let swiper_<?= $this->id; ?>;
            let macy_<?= $this->id; ?>;
            let lastWidth = window.innerWidth;


            var lazyLoadInstance = new LazyLoad({
                elements_selector: ".lazy"
            });

            function loadMacy(callback) {
                if (typeof Macy !== 'undefined') {
                    callback();
                } else {
                    setTimeout(function () {
                        loadMacy(callback);
                    }, 50);
                }
            }

            function initOrDestroySwiper(forceInit = false) {
                let currentWidth = window.innerWidth;
                let isMobile = currentWidth < 768;
                let shouldUseMacy = false;

                <?php if ($this->deactivate_slider === ''): ?>
                shouldUseMacy = false;
                <?php elseif ($this->deactivate_slider === 'desktop'): ?>
                shouldUseMacy = !isMobile;
                <?php elseif ($this->deactivate_slider === 'mobile'): ?>
                shouldUseMacy = isMobile;
                <?php elseif ($this->deactivate_slider === 'both'): ?>
                shouldUseMacy = true;
                <?php endif; ?>

                if (!forceInit && Math.abs(currentWidth - lastWidth) < 50) {
                    return;
                }

                lastWidth = currentWidth;

                let container = document.querySelector('.content-slider_<?= $this->id; ?>');
                let showMoreContainer = document.querySelector('.show-more-container');

                if (swiper_<?= $this->id; ?> && !swiper_<?= $this->id; ?>.destroyed) {
                    swiper_<?= $this->id; ?>.destroy(true, true);
                }
                if (macy_<?= $this->id; ?>) {
                    macy_<?= $this->id; ?>.remove();
                    macy_<?= $this->id; ?> = null;
                }

                container.classList.remove('swiper', 'macy-container');
                let items = container.querySelectorAll('.swiper-slide, .macy-item');
                items.forEach(item => {
                    item.classList.remove('swiper-slide', 'macy-item', 'hidden-desktop', 'hidden-mobile');
                });

                let wrapper = container.querySelector('.swiper-wrapper');
                if (wrapper) {
                    while (wrapper.firstChild) {
                        container.appendChild(wrapper.firstChild);
                    }
                    wrapper.remove();
                }

                let swiperElements = container.querySelectorAll('.swiper-lazy-preloader, .swiper-pagination');
                swiperElements.forEach(el => el.remove());

                if (shouldUseMacy) {
                    container.classList.add('macy-container');
                    items.forEach((item, index) => {
                        item.classList.add('macy-item');
                        if (index >= <?= $desktopVisibleItems ?>) {
                            item.classList.add('hidden-desktop');
                        }
                        if (index >= <?= $mobileVisibleItems ?>) {
                            item.classList.add('hidden-mobile');
                        }
                    });

                    if (showMoreContainer) {
                        showMoreContainer.style.display = 'block';
                    }

                    <?php
                    $defaultDesktopColumns = 3;
                    $defaultMobileColumns = 2;
                    $desktopColumns = $this->masonry_spalten ?: $defaultDesktopColumns;
                    $mobileColumns = $this->masonry_spalten_mobile ?: $defaultMobileColumns;
                    ?>
                    loadMacy(function () {
                        macy_<?= $this->id; ?> = Macy({
                            container: '.macy-container',
                            trueOrder: true,
                            waitForImages: true,
                            margin: <?php echo $this->space_between ?: 20; ?>,
                            columns: <?= $desktopColumns ?>,
                            breakAt: {
                                768: <?= $mobileColumns ?>,
                            }
                        });

                        let images = container.querySelectorAll('img');
                        images.forEach(img => {
                            if (img.src.startsWith('data:image/gif;base64')) {
                                let sources = img.parentElement.querySelectorAll('source');
                                if (sources.length > 0) {
                                    img.src = sources[sources.length - 1].srcset;
                                }
                            }
                            img.addEventListener('load', () => {
                                macy_<?= $this->id; ?>.recalculate(true);
                            });
                        });
                    });
                } else {
                    container.classList.add('swiper');
                    if (showMoreContainer) {
                        showMoreContainer.style.display = 'none';
                    }

                    wrapper = document.createElement('div');
                    wrapper.classList.add('swiper-wrapper');
                    Array.from(container.children).forEach(child => wrapper.appendChild(child));
                    container.appendChild(wrapper);

                    items.forEach(item => item.classList.add('swiper-slide'));

                    let pagination = document.createElement('div');
                    pagination.classList.add('swiper-pagination');
                    container.appendChild(pagination);

                    swiper_<?= $this->id; ?> = new Swiper('.swiper.content-slider_<?php echo $this->id; ?>', {
                        direction: 'horizontal',
                        loop: <?php echo $this->loop ? 'true' : 'false'; ?>,
                        lazy: false,
                        spaceBetween: <?php echo $this->space_between ?: 20; ?>,
                        speed: <?php echo $this->transition_time ?: 1500; ?>,
                        effect: <?php echo $this->slide_effect ? "'$this->slide_effect'" : "'slide'"; ?>,
                        <?php if ($this->autoplay): ?>
                        autoplay: {
                            delay: <?php echo $this->autoplay_time ?: 3000; ?>,
                        },
                        <?php endif; ?>
                        autoHeight: false,
                        <?php if ($this->slide_effect == "coverflow"): ?>
                        coverflowEffect: {
                            rotate: 50,
                            stretch: 0,
                            depth: 100,
                            modifier: 1,
                            slideShadows: true,
                        },
                        <?php endif; ?>
                        <?php if ($this->slide_effect == "fade"): ?>
                        fadeEffect: {
                            crossFade: true
                        },
                        <?php endif; ?>
                        <?php if (count($this->galery) > 1 || count($dataSorted) > 1): ?>
                        navigation: {
                            nextEl: '.content-slider_<?= $this->id; ?>.swiper-button-next',
                            prevEl: '.content-slider_<?= $this->id; ?>.swiper-button-prev',
                        },
                        pagination: {
                            el: '.content-slider_<?php echo $this->id; ?>.swiper-pagination',
                            clickable: true,
                        },
                        <?php endif; ?>
                        <?php if ($this->slides_per_view): ?>
                        <?php if ($this->slides_per_view > 1): ?>
                        slidesPerView: <?= (!empty($this->slides_per_view_mobile) && is_numeric($this->slides_per_view_mobile)) ? intval($this->slides_per_view_mobile) : 1 ?>,
                        breakpoints: {
                            768: {
                                slidesPerView: <?php echo $this->slides_per_view; ?>,
                            }
                        },
                        <?php else: ?>
                        slidesPerView: 1,
                        <?php endif; ?>
                        <?php else: ?>
                        slidesPerView: 'auto',
                        <?php endif; ?>
                        on: {
                            init: function () {
                                updateLazyLoading(this);
                            },
                            slideChange: function () {
                                updateLazyLoading(this);
                            }
                        }
                    });
                }

                initShowMoreButton();
            }

            function updateLazyLoading(swiper) {
                const slidesPerView = swiper.params.slidesPerView;

                // Nur fortfahren, wenn slidesPerView keine ganze Zahl ist
                if (Number.isInteger(slidesPerView)) return;

                const currentIndex = swiper.activeIndex;
                const floorIndex = currentIndex + Math.floor(slidesPerView);
                const ceilIndex = currentIndex + Math.ceil(slidesPerView);

                // Funktion zum Entfernen des loading-Attributs
                const removeLazyLoading = (index) => {
                    if (index < swiper.slides.length) {
                        const slide = swiper.slides[index];
                        const img = slide.querySelector('img');
                        if (img && img.getAttribute('loading') === 'lazy') {
                            img.removeAttribute('loading');
                        }
                    }
                };

                // Entfernen des loading-Attributs fÃ¼r beide relevante Elemente
                removeLazyLoading(floorIndex);
                removeLazyLoading(ceilIndex);

                lazyLoadInstance.update();
            }

            function initShowMoreButton() {
                const showMoreContainer = document.querySelector('.show-more-container');
                if (!showMoreContainer) {
                    return;
                }
                const showMoreButton = showMoreContainer.querySelector('.show-more-button');
                const hiddenItems = document.querySelectorAll('.hidden-desktop, .hidden-mobile');

                if (showMoreButton && hiddenItems.length > 0) {
                    showMoreButton.style.display = 'inline-flex';
                    showMoreButton.addEventListener('click', function () {
                        hiddenItems.forEach(item => {
                            item.classList.remove('hidden-desktop', 'hidden-mobile');
                        });
                        showMoreButton.style.display = 'none';

                        if (macy_<?= $this->id; ?>) {
                            macy_<?= $this->id; ?>.recalculate(true);
                        }
                    });
                } else if (showMoreButton) {
                    showMoreButton.style.display = 'none';
                }
            }

            function debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            initOrDestroySwiper(true);

            window.addEventListener('resize', debounce(() => initOrDestroySwiper(false), 250));
        });
    </script>
<?php endif; ?>