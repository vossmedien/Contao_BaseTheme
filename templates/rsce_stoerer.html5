<?php


if (Vsm\VsmHelperTools\Helper\EnvHelper::isFrontend()) {
    $GLOBALS['TL_CSS'][] = 'files/base/layout/css/elements/rsce/ce_rsce_stoerer.min.css|static';
    $GLOBALS['TL_BODY'][] = '<script defer type="module" src="/files/base/layout/js/_elements/ce_rsce_stoerer.min.js"></script>';
}

// Hilfsfunktion zum Decodieren der Farbwerte
function decodeColor($color)
{
    return html_entity_decode($color, ENT_QUOTES | ENT_HTML5, 'UTF-8');
}


// Generiere dynamische Stile
$styles = '';
$counterElements = 0;

// Bestimme zusätzliche Klassen basierend auf Positionierungsvariablen
$additionalClasses = [];
if (!empty($this->alternate_top_position)) $additionalClasses[] = 'is-top';
if (!empty($this->alternate_bottom_position)) $additionalClasses[] = 'is-bottom';
if (!empty($this->alternate_right_position)) $additionalClasses[] = 'is-right';
if (!empty($this->alternate_left_position)) $additionalClasses[] = 'is-left';
$additionalClassesString = implode(' ', $additionalClasses);

// Berechne padding/margin Wert basierend auf Size
$contentPaddingStyle = '';
if (isset($this->size) && is_array($this->size) && !empty($this->size[0])) {
    $paddingValue = intval($this->size[0]) / 3;
    $contentPaddingStyle = "padding-inline: {$paddingValue}px; margin-left: {$paddingValue}px;";
}

// Generiere CSS Custom Properties für alle Farben einmalig
$customProperties = [];

// Globale Footer-Farben
if (!empty($this->footer_bg_color)) {
    $customProperties['--stoerer-footer-bg'] = decodeColor($this->footer_bg_color);
}
if (!empty($this->footer_initial_color)) {
    $customProperties['--stoerer-footer-color'] = decodeColor($this->footer_initial_color);
}
if (!empty($this->footer_bg_hover_color)) {
    $customProperties['--stoerer-footer-bg-hover'] = decodeColor($this->footer_bg_hover_color);
}
if (!empty($this->footer_svg_hover_color)) {
    $customProperties['--stoerer-footer-color-hover'] = decodeColor($this->footer_svg_hover_color);
} elseif (!empty($this->footer_bg_color)) {
    $customProperties['--stoerer-footer-color-hover'] = decodeColor($this->footer_bg_color);
}

// Size-basierte Properties
if (isset($this->size) && is_array($this->size) && !empty($this->size[0])) {
    $customProperties['--stoerer-size'] = intval($this->size[0]) . 'px';
    $customProperties['--stoerer-padding-calc'] = (intval($this->size[0]) / 4) . 'px';
}

// Erstelle Style-String
$styleString = '';
if (!empty($customProperties)) {
    $styleString = 'style="' . implode('; ', array_map(function($key, $value) {
        return $key . ': ' . $value;
    }, array_keys($customProperties), $customProperties)) . '"';
}
?>
<!-- indexer::stop -->
<div <?php echo $this->cssID; ?>
     class="<?php echo ($this->is_fixed ? 'is-fixed ' : '') . 'content--element ' . str_replace("container", "", $this->class) . ' ' . $additionalClassesString; ?>"
     <?php echo $styleString; ?>
     >
    <?php $counterElements = 0;
    foreach ($this->stoerer as $stoererElement): ?>
        <?php
        $uniqueId = 'stoerer-' . $this->id . '-' . $counterElements;
        $isExpandableClass = isset($this->expand) && $this->expand ? 'is-expandable' : '';
        $animationClass = $stoererElement->animation_type ?? '';
        // Prüfen, ob nur Text vorhanden ist (kein Footer, keine Buttons)
        $isTextOnly = ($stoererElement->content_type === 'text' && !empty($stoererElement->content)) &&
                      !($this->integrate_footer && !empty($this->footer_elements));
        $textOnlyClass = $isTextOnly ? 'has-text-only' : '';

        // Sammle alle Farben für diesen Störer in CSS Custom Properties
        $stoererProperties = [];
        
        // Trigger-Farben
        if (!empty($stoererElement->trigger_text_color)) {
            $stoererProperties['--trigger-color'] = decodeColor($stoererElement->trigger_text_color);
        }
        if (!empty($stoererElement->trigger_bg_color)) {
            $stoererProperties['--trigger-bg'] = decodeColor($stoererElement->trigger_bg_color);
        }
        if (!empty($stoererElement->trigger_text_hover_color)) {
            $stoererProperties['--trigger-color-hover'] = decodeColor($stoererElement->trigger_text_hover_color);
        }
        if (!empty($stoererElement->trigger_bg_hover_color)) {
            $stoererProperties['--trigger-bg-hover'] = decodeColor($stoererElement->trigger_bg_hover_color);
        }
        
        // Content-Farben
        if (!empty($stoererElement->content_text_color)) {
            $stoererProperties['--content-color'] = decodeColor($stoererElement->content_text_color);
        }
        if (!empty($stoererElement->content_bg_color)) {
            $stoererProperties['--content-bg'] = decodeColor($stoererElement->content_bg_color);
        }
        if (!empty($stoererElement->content_text_hover_color)) {
            $stoererProperties['--content-color-hover'] = decodeColor($stoererElement->content_text_hover_color);
        }
        if (!empty($stoererElement->content_bg_hover_color)) {
            $stoererProperties['--content-bg-hover'] = decodeColor($stoererElement->content_bg_hover_color);
        }

        $stoererStyleString = '';
        if (!empty($stoererProperties)) {
            $stoererStyleString = implode('; ', array_map(function($key, $value) {
                return $key . ': ' . $value;
            }, array_keys($stoererProperties), $stoererProperties));
        }

        // Position-Styles
        $positionStyles = [];
        if (!empty($this->alternate_top_position)) $positionStyles[] = "top: {$this->alternate_top_position}";
        if (!empty($this->alternate_bottom_position)) $positionStyles[] = "bottom: {$this->alternate_bottom_position}";
        if (!empty($this->alternate_right_position)) $positionStyles[] = "right: {$this->alternate_right_position}";
        if (!empty($this->alternate_left_position)) $positionStyles[] = "left: {$this->alternate_left_position}";
        
        $finalStyleString = array_merge($positionStyles, [$stoererStyleString]);
        $finalStyleString = array_filter($finalStyleString);
        $finalStyleString = !empty($finalStyleString) ? 'style="' . implode('; ', $finalStyleString) . '"' : '';
        ?>

        <div id="<?php echo $uniqueId; ?>" 
             class="ce--stoerer <?php echo $isExpandableClass; ?> <?php echo $textOnlyClass; ?>"
             <?php echo $finalStyleString; ?>
        >
            <!-- NEUER INNERER WRAPPER -->
            <div class="stoerer-inner-wrapper <?php echo $animationClass; ?>">
                <div class="stoerer-trigger">
                    <?php if (isset($stoererElement->img) && $stoererElement->img): ?>
                        <?php
                        $hasMobileImage = isset($stoererElement->img_mobile) && $stoererElement->img_mobile;
                        $desktopImageClasses = $hasMobileImage ? "d-none d-md-block" : "";

                        $desktopImagePath = Vsm\VsmHelperTools\Helper\ImageHelper::generateImageURL($stoererElement->img, $this->size);
                        if (substr($desktopImagePath, -4) === '.svg') {
                            echo Vsm\VsmHelperTools\Helper\ImageHelper::getSvgCode(
                                $stoererElement->img,
                                strip_tags($stoererElement->content ?? ''),
                                $this->size,
                                $desktopImageClasses,
                                'svg-image'
                            );
                        } else {
                            echo Vsm\VsmHelperTools\Helper\ImageHelper::generateImageHTML(
                                $stoererElement->img,
                                strip_tags($stoererElement->content ?? ''),
                                null,
                                $this->size,
                                $desktopImageClasses,
                                false
                            );
                        }
                        ?>
                    <?php endif; ?>
                    <?php if (isset($stoererElement->img_mobile) && $stoererElement->img_mobile): ?>
                        <?php
                        $mobileSize = !empty($this->size_mobile) ? $this->size_mobile : $this->size;
                        $mobileImagePath = Vsm\VsmHelperTools\Helper\ImageHelper::generateImageURL($stoererElement->img_mobile, $mobileSize);
                        $mobileImageClasses = "d-block d-md-none";

                        if (substr($mobileImagePath, -4) === '.svg') {
                            echo Vsm\VsmHelperTools\Helper\ImageHelper::getSvgCode(
                                $stoererElement->img_mobile,
                                strip_tags($stoererElement->content ?? ''),
                                $mobileSize,
                                $mobileImageClasses,
                                'svg-image'
                            );
                        } else {
                            echo Vsm\VsmHelperTools\Helper\ImageHelper::generateImageHTML(
                                $stoererElement->img_mobile,
                                strip_tags($stoererElement->content ?? ''),
                                null,
                                $mobileSize,
                                $mobileImageClasses,
                                false
                            );
                        }
                        ?>
                    <?php endif; ?>
                </div>

                <div class="stoerer--content">
                    <div class="stoerer-content--inner">
                        <?php if ($stoererElement->content_type === 'text' && isset($stoererElement->content) && $stoererElement->content): ?>
                            <?= $stoererElement->content; ?>
                        <?php elseif ($stoererElement->content_type === 'buttons' && isset($stoererElement->buttons)): ?>
                            <div class="stoerer-buttons--list">
                                <?php foreach ($stoererElement->buttons as $button): ?>
                                    <div class="stoerer-button--item <?php echo $button->animation_type ?? ''; ?>">
                                        <?php if (!empty($button->button_label)): ?>
                                            <span class="button-label"><?php echo $button->button_label; ?></span>
                                        <?php endif; ?>
                                        <a href="<?= $button->link_url; ?>"
                                           id="<?= $button->link_id ?: uniqid('btn-'); ?>"
                                           class="btn <?php echo $button->link_type ?: 'btn-primary'; ?> <?php echo $button->link_size ?: ''; ?>"
                                           <?php if ($button->new_tab): ?>target="_blank" rel="noopener noreferrer"<?php endif; ?>
                                           <?php if (str_starts_with($button->link_url, 'mailto:') && $button->link_betreff): ?>
                                              onclick="this.href+='?subject=<?= rawurlencode($button->link_betreff) ?>'"
                                           <?php endif; ?>
                                        >
                                            <?php echo $button->link_text; ?>
                                        </a>
                                    </div>
                                <?php endforeach; ?>
                            </div>
                        <?php endif; ?>
                    </div>

                    <?php if ($this->integrate_footer && isset($this->footer_elements)): ?>
                        <div class="stoerer-footer--elements">
                            <?php foreach ($this->footer_elements as $footerElement): ?>
                                 <div class="footer-element--item <?php echo $footerElement->animation_type ?? ''; ?>"
                                     <?php if (!empty($footerElement->title)): ?>
                                         data-bs-toggle="tooltip"
                                         data-bs-placement="bottom"
                                         title="<?= htmlspecialchars($footerElement->title) ?>"
                                     <?php endif; ?>
                                     >
                                    <?php if ($footerElement->link_url): ?>
                                        <a href="<?= $footerElement->link_url; ?>" <?php if ($footerElement->new_tab): ?>target="_blank" rel="noopener noreferrer"<?php endif; ?>>
                                    <?php endif; ?>

                                    <?php if (isset($footerElement->img) && $footerElement->img): ?>
                                        <?php
                                        $footerImagePath = Vsm\VsmHelperTools\Helper\ImageHelper::generateImageURL($footerElement->img, $this->footer_size ?? $this->size);
                                        if (substr($footerImagePath, -4) === '.svg') {
                                            echo Vsm\VsmHelperTools\Helper\ImageHelper::getSvgCode(
                                                $footerElement->img,
                                                '',
                                                $this->footer_size ?? $this->size,
                                                'svg-image'
                                            );
                                        } else {
                                            echo Vsm\VsmHelperTools\Helper\ImageHelper::generateImageHTML(
                                                $footerElement->img,
                                                '',
                                                null,
                                                $this->footer_size ?? $this->size,
                                                '',
                                                false
                                            );
                                        }
                                        ?>
                                    <?php endif; ?>

                                    <?php if ($footerElement->link_url): ?>
                                        </a>
                                    <?php endif; ?>
                                 </div>
                             <?php endforeach; ?>
                         </div>
                     <?php endif; ?>
                </div>
            </div>
            <!-- ENDE INNERER WRAPPER -->
        </div>

        <?php $counterElements++; endforeach; ?>
</div>
<!-- indexer::continue -->