<?php

namespace Contao;

if ($GLOBALS['TL_CONFIG']['useRTE']):

    ?>
    <script>
        {
            const config = {
                min_height: 336,
                language: '<?= Backend::getTinyMceLanguage() ?>',
                element_format: 'html',
                document_base_url: '<?= Environment::get('base') ?>',
                entities: '160,nbsp,60,lt,62,gt,173,shy',
                license_key: 'gpl',
                branding: false,
                promotion: false,
                skin: (document.documentElement.dataset.colorScheme === 'dark' ? 'tinymce-5-dark' : 'tinymce-5'),
                setup: function (editor) {
                    editor.getElement().removeAttribute('required');
                    document.querySelectorAll('[accesskey]').forEach(function (el) {
                        editor.addShortcut('access+' + el.accessKey, el.id, () => el.click());
                    });
                },
                init_instance_callback: function (editor) {
                    if (document.activeElement && document.activeElement.id && document.activeElement.id == editor.id) {
                        editor.editorManager.get(editor.id).focus();
                    }
                    editor.on('focus', () => window.dispatchEvent(new Event('store-scroll-offset')));
                },

                <?php $this->block('picker'); ?>
                file_picker_callback: function (callback, value, meta) {
                    Backend.openModalSelector({
                        'id': 'tl_listing',
                        'title': document.getElement('.tox-dialog__title').get('text'),
                        'url': Contao.routes.backend_picker + '?context=' + (meta.filetype == 'file' ? 'link' : 'file') + '&amp;extras[fieldType]=radio&amp;extras[filesOnly]=true&amp;extras[source]=<?= $this->source ?>&amp;value=' + value + '&amp;popup=1',
                        'callback': function (table, val) {
                            document.getElement('.tox-dialog input')?.focus();
                            callback(val.join(','));
                        }
                    });
                },
                file_picker_types: '<?= $this->fileBrowserTypes ?>',
                <?php $this->endblock(); ?>

                <?php $this->block('content_css'); ?>
                content_css: [document.documentElement.dataset.colorScheme === 'dark' ? '<?= $this->asset('tinymce-dark.css', 'system/themes/' . Backend::getTheme()) ?>' : '<?= $this->asset('tinymce.css', 'system/themes/' . Backend::getTheme()) ?>', 'files/base/layout/css/style.min.css', 'files/base/backend/tinymce.min.css'],
                importcss_selector_converter: function (selector) {
                    return false;
                },
                <?php $this->endblock(); ?>

                <?php $this->block('plugins'); ?>
                plugins: 'autosave charmap code fullscreen image importcss link lists searchreplace stripnbsp table visualblocks visualchars inserttag',
                <?php $this->endblock(); ?>

                <?php $this->block('valid_elements'); ?>
                extended_valid_elements: 'q[cite|class|title],article,section,hgroup,figure,figcaption,i[class],a[*]',
                entity_encoding: 'raw',
                <?php $this->endblock(); ?>

                <?php $this->block('menubar'); ?>
                menubar: 'edit insert table inserttags',
                <?php $this->endblock(); ?>

                <?php $this->block('toolbar'); ?>
                toolbar: 'styles | bgPrimary bgSecondary | link unlink | image | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | code | insertemail',
                <?php $this->endblock(); ?>

                <?php $this->block('contextmenu'); ?>
                contextmenu: false,
                <?php $this->endblock(); ?>

                <?php $this->block('cache_suffix'); ?>
                cache_suffix: '?v=<?= $this->assetVersion('js/tinymce.min.js', 'contao-components/tinymce4') ?>',
                <?php $this->endblock(); ?>

                <?php $this->block('custom'); ?>
                <?php $this->endblock(); ?>

                <?php if ($this->readonly): ?>
                readonly: true,
                <?php endif; ?>

                browser_spellcheck: true,
                importcss_append: true,

                style_formats_merge: true,
                style_formats: [
                    {
                        title: 'Schriftgrößen',
                        items: [
                            {
                                title: 'H1',
                                inline: 'span',
                                classes: 'h1',
                                wrapper: false
                            },
                            {
                                title: 'H2',
                                inline: 'span',
                                classes: 'h2',
                                wrapper: false
                            },
                            {
                                title: 'H3',
                                inline: 'span',
                                classes: 'h3',
                                wrapper: false
                            },
                            {
                                title: 'H4',
                                inline: 'span',
                                classes: 'h4',
                                wrapper: false
                            },
                            {
                                title: 'H5',
                                inline: 'span',
                                classes: 'h5',
                                wrapper: false
                            },
                            {
                                title: 'H6',
                                inline: 'span',
                                classes: 'h6',
                                wrapper: false
                            },
                            {
                                title: 'Größe XS',
                                inline: 'span',
                                classes: 'text-xs',
                                wrapper: false
                            },
                            {
                                title: 'Größe SM',
                                inline: 'span',
                                classes: 'text-sm',
                                wrapper: false
                            },
                            {
                                title: 'Größe Base',
                                inline: 'span',
                                classes: 'text-base',
                                wrapper: false
                            },
                            {
                                title: 'Größe LG',
                                inline: 'span',
                                classes: 'text-lg',
                                wrapper: false
                            },
                            {
                                title: 'Größe XL',
                                inline: 'span',
                                classes: 'text-xl',
                                wrapper: false
                            }
                        ]
                    },
                    {
                        title: 'Farben',
                        items: [
                            {title: 'Text in Hauptfarbe', inline: 'span', classes: 'text-primary'},
                            {title: 'Text in Grau', inline: 'span', classes: 'text-gray'},
                        ],
                    },
                ],
                link_class_list: [
                    {
                        title: 'None',
                        value: ''
                    },
                    {
                        title: 'Haupt-Button',
                        value: 'btn btn-primary'
                    },
                    {
                        title: 'Haupt-Button (Outline)',
                        value: 'btn btn-outline-primary'
                    },
                    {
                        title: 'Sekundärer Button',
                        value: 'btn btn-secondary'
                    },
                    {
                        title: 'Sekundärer Button (Outline)',
                        value: 'btn btn-outline-secondary'
                    },
                    {
                        title: 'Tertiärer Button',
                        value: 'btn btn-tertiary'
                    },
                    {
                        title: 'Tertiärer Button (Outline)',
                        value: 'btn btn-outline-tertiary'
                    },
                    {
                        title: 'Weißer Button mit schwarzer Schrift',
                        value: 'btn btn-white'
                    },
                    {
                        title: 'Transparenter Button mit schwarzer Schrift und Rahmen',
                        value: 'btn btn-outline-black'
                    },
                    {
                        title: 'Transparenter Button mit weißer Schrift und Rahmen',
                        value: 'btn btn-outline-white'
                    },
                ],

                menu: {
                    inserttags: {title: 'Inserttags', items: 'insertemail'}
                },
            };

            // Add custom plugin for inserttags
            tinymce.PluginManager.add('inserttag', function (editor) {
                editor.ui.registry.addMenuItem('insertemail', {
                    text: 'E-Mail Inserttag',
                    onAction: function () {
                        var selectedText = editor.selection.getContent({format: 'text'});
                        if (selectedText) {
                            editor.insertContent('{{email::' + selectedText + '}}');
                        } else {
                            editor.windowManager.open({
                                title: 'E-Mail Inserttag einfügen',
                                body: {
                                    type: 'panel',
                                    items: [{
                                        type: 'input',
                                        name: 'email',
                                        label: 'E-Mail Text'
                                    }]
                                },
                                onSubmit: function (api) {
                                    var data = api.getData();
                                    editor.insertContent('{{email::' + data.email + '}}');
                                    api.close();
                                }
                            });
                        }
                    }
                });
            });

            // Add Stimulus data and controller reference
            const target = document.querySelector('#<?= $this->selector ?>');
            target.tinymceConfig = config;
            target.setAttribute('data-action', 'turbo:before-visit@window->contao--tinymce#leave');
            target.setAttribute('data-controller', 'contao--tinymce');
        }
    </script>
<?php endif; ?>
